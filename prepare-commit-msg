#!/usr/bin/env python
"""Git prepare-commit-msg hook,
 checks if the branch naming is correct as well validates the commit message format

Examples:
    correct branch naming:
        "feature/new_feature"
        "bugfix/some_bug_fix"

    correct commit message format:
        "[BCD-123]: adds a new field"

"""
import sys, re
from subprocess import check_output

jira_code = "BCD"

# prefixes
branch_prefixes = ["feature", "bugfix", "test"]

# git default branches
default_branches = ["master"]


commit_msg_filepath = sys.argv[1]

branch = check_output(["git", "symbolic-ref", "--short", "HEAD"]).strip()
branch_regex = "({})\/(\w+)".format("|".join(branch_prefixes))
msg_regex = "\[{}-(\d+)\]:\s?(\w+)".format(jira_code)


if re.match(branch_regex, branch) or branch in default_branches:
    with open(commit_msg_filepath, "r+") as fh:
        commit_msg = fh.read()
        if re.match(msg_regex, commit_msg):
            fh.seek(0, 0)
            fh.write("%s" % (commit_msg))
        else:
            print(
                "Incorrect commit message format,\
                message must start with '[{code}-no]: \
                ' e.g. '[{code}-150]: '".format(
                    code=jira_code
                )
            )
            sys.exit(1)
else:
    print(
        "Incorrect branch name, branch must start with '{}'".format(
            ", ".join(branch_prefixes)
        )
    )
    sys.exit(1)
