#!/usr/bin/env python
"""Git prepare-commit-msg hook,
 checks if the branch naming is correct as well validates the commit message format

Examples:
    correct branch naming:
        "BCD-180|feature/new_feature"
        "BCD-181|bugfix/some_bug_fix"

    correct commit message format:
        "[BCD-123]: adds a new field"

"""
import sys, re
from subprocess import check_output

jira_code = "BCD"

# prefixes
branch_prefixes = ["feature", "bugfix", "test"]

# git default branches
default_branches = ["master"]


commit_msg_filepath = sys.argv[1]

branch = (
    check_output(["git", "symbolic-ref", "--short", "HEAD"])
    .decode("utf-8")
    .strip()
)
branch_regex = "{}-(\d+)\|({})\/(\w+)".format(
    jira_code, "|".join(branch_prefixes)
)


if re.match(branch_regex, branch) or branch in default_branches:
    with open(commit_msg_filepath, "r+") as fh:
        print(branch)
        jira_issue = branch.split("|")[0]
        commit_msg = fh.read()
        fh.seek(0, 0)
        fh.write("{}: {}".format(jira_issue, commit_msg))
else:
    print(
        "Incorrect branch name {branch},\
        branch must start with issue number\
        and branch type in this format.\
        e.g. [BCD-192]: feature/install_script".format(
            branch=branch
        )
    )
    sys.exit(1)
